#!/bin/sh

set -e
set -u

if [ "$#" -gt 1 ]; then
    printf "usage: %s [branch]\n" "$0" 1>&2
    exit 1
fi

branch="${1:-master}"
rootdir="${HOME}"/opt/local/src/emacs

if [ ! -e "${rootdir}" ]; then
    printf "error: %s does not exist.\n" "${rootdir}" 1>&2
    exit 1
fi

packages=""
packages="${packages} librsvg"
packages="${packages} gnutls"
packages="${packages} libgccjit"

for package in ${packages} ; do
    if ! (brew list --formula | grep "${package}" > /dev/null) ; then
        printf "error: %s is not installed.\n" "${package}" 1>&2
        exit 1
    fi
done

homebrew_prefix="$(brew --prefix)"

CPPFLAGS=""
CPPFLAGS="${CPPFLAGS} -isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libxml2"
CPPFLAGS="${CPPFLAGS} -I${homebrew_prefix}/include"
CPPFLAGS="${CPPFLAGS} -I${HOME}/opt/local/include"

LDFLAGS=""
LDFLAGS="${LDFLAGS} -L${homebrew_prefix}/lib"
LDFLAGS="${LDFLAGS} -L${HOME}/opt/local/lib"

export CPPFLAGS
export LDFLAGS

git_clean_excludes=""
git_clean_excludes="${git_clean_excludes} -e GPATH"
git_clean_excludes="${git_clean_excludes} -e GRTAGS"
git_clean_excludes="${git_clean_excludes} -e GTAGS"

git -C "${rootdir}" clean -q -d -x ${git_clean_excludes} -f
git -C "${rootdir}" checkout "${branch}"
git -C "${rootdir}" clean -q -d -x ${git_clean_excludes} -f
git -C "${rootdir}" reset --hard HEAD
git -C "${rootdir}" pull --ff-only origin "${branch}"

options=""
options="${options} --with-gnutls"
options="${options} --with-xml2"
options="${options} --with-rsvg"
options="${options} --with-native-compilation"

(cd "${rootdir}" && ./autogen.sh)
(cd "${rootdir}" && ./configure ${options})
(cd "${rootdir}" && make -j 8)
(cd "${rootdir}" && make install)

# @todo install to ~/Applications
