import os ;

constant HOME : [ os.environ HOME ] ;

# Host Compilers

if [ os.name ] = NT
{
  # this is the default system compiler
  using msvc ;
}
else if [ os.name ] = CYGWIN
{
  # this is the default system compiler
  using gcc ;
}
else if [ os.name ] = LINUX
{
  # this is the default system compiler
  using gcc ;

  using gcc : 9 : /home/linuxbrew/.linuxbrew/opt/gcc@9/bin/g++-9 ;
  using gcc : 8 : /home/linuxbrew/.linuxbrew/opt/gcc@8/bin/g++-8 ;
  using gcc : 7 : /home/linuxbrew/.linuxbrew/opt/gcc@7/bin/g++-7 ;
#  using gcc : 6 : /home/linuxbrew/.linuxbrew/opt/gcc@6/bin/g++-6! ;

  # other compilers, both system and optional
  using clang ;

  using clang : 9 : /home/linuxbrew/.linuxbrew/opt/llvm/bin/clang++ ;
  #using clang : 8 : /home/linuxbrew/.linuxbrew/opt/llvm@8/bin/clang++ ;
  using clang : 7 : /home/linuxbrew/.linuxbrew/opt/llvm@7/bin/clang++ ;
  using clang : 6 : /home/linuxbrew/.linuxbrew/opt/llvm@6/bin/clang++ ;
#  using clang : 5 : /home/linuxbrew/.linuxbrew/opt/llvm@5/bin/clang++ ;
#  using clang : 4 : /home/linuxbrew/.linuxbrew/opt/llvm@4/bin/clang++ ;
}
else if [ os.name ] = MACOSX
{
  # this is the default system compiler
  using clang ;

  # other compilers, both system and optional
  using clang : 9 : /usr/local/opt/llvm/bin/clang++ ;
  #using clang : 8 : /usr/local/opt/llvm@8/bin/clang++ ;
  using clang : 7 : /usr/local/opt/llvm@7/bin/clang++ ;
  using clang : 6 : /usr/local/opt/llvm@6/bin/clang++ ;
  using clang : 5 : /usr/local/opt/llvm@5/bin/clang++ ;
  using clang : 4 : /usr/local/opt/llvm@4/bin/clang++ ;

  using darwin ;

  using darwin : 9 : /usr/local/opt/gcc@9/bin/g++-9 ;
  using darwin : 8 : /usr/local/opt/gcc@8/bin/g++-8 ;
  using darwin : 7 : /usr/local/opt/gcc@7/bin/g++-7 ;
  using darwin : 6 : /usr/local/opt/gcc@6/bin/g++-6 ;

  #using emscripten ;
}

# MPI

if [ os.name ] = MAXOSX
{
  using mpi ;
}

# Documentation

local docbook-xsl-path = ;
if [ os.name ] = MACOSX
{
  docbook-xsl-path = /usr/local/opt/docbook-xsl/docbook-xsl ;
}
local docbook-dtd-path = ;
if [ os.name ] = MACOSX
{
  docbook-dtd-path = /usr/local/opt/docbook/docbook/xml/4.2 ;
}
local boostbook-executable = ;
if [ os.name ] = MACOSX
{
  boostbook-executable = $(HOME)/opt/local/src/boost/boost.git/tools/boostbook ;
}
local quickbook-executable = ;
if [ os.name ] = MACOSX
{
  quickbook-executable = $(HOME)/opt/local/src/boost/boost.git/bin.v2/tools/quickbook/src/clang-darwin-4.2.1/release/link-static/quickbook ;
}

using xsltproc ;
using boostbook : $(docbook-xsl-path) : $(docbook-dtd-path) : $(boostbook-executable) ;
using doxygen ;
using quickbook : $(quickbook-executable) ;
using asciidoctor ;

if [ os.name ] = MACOSX
{
  using fop ;
}


# Boost.Build user configuration for the Boost C++ Libraries

import boost ;

path-constant BOOST_ROOT_BASE : "$(HOME)/opt/local/src/boost" ;

# Default to the installed version of the Boost C++ Libraries
if [ os.name ] = LINUX
{
  # System Boost
  using boost : "" : <include>/usr/include <library>/usr/lib <layout>system ;
}
else if [ os.name ] = MACOSX
{
  # Homebrew-installed Boost
  using boost : "" : <include>/usr/local/include <library>/usr/local/lib <layout>tagged ;
}
else if [ os.name ] = NT
{
  # user-built Boost
  using boost : "" : <include>C:/Boost/include <library>C:/Boost/lib <layout>tagged ;
}

# Provide for building from git, requires special knowledge
using boost : git : <root>$(BOOST_ROOT_BASE)/boost.git ;

# Provide all source versions.
using boost : 1.69.0 : <root>$(BOOST_ROOT_BASE)/boost_1_69_0 ;
using boost : 1.68.0 : <root>$(BOOST_ROOT_BASE)/boost_1_68_0 ;
using boost : 1.67.0 : <root>$(BOOST_ROOT_BASE)/boost_1_67_0 ;
using boost : 1.66.0 : <root>$(BOOST_ROOT_BASE)/boost_1_66_0 ;
using boost : 1.65.0 : <root>$(BOOST_ROOT_BASE)/boost_1_65_0 ;
using boost : 1.64.0 : <root>$(BOOST_ROOT_BASE)/boost_1_64_0 ;
using boost : 1.63.0 : <root>$(BOOST_ROOT_BASE)/boost_1_63_0 ;
using boost : 1.62.0 : <root>$(BOOST_ROOT_BASE)/boost_1_62_0 ;
using boost : 1.61.0 : <root>$(BOOST_ROOT_BASE)/boost_1_61_0 ;
using boost : 1.60.0 : <root>$(BOOST_ROOT_BASE)/boost_1_60_0 ;
using boost : 1.59.0 : <root>$(BOOST_ROOT_BASE)/boost_1_59_0 ;
using boost : 1.58.0 : <root>$(BOOST_ROOT_BASE)/boost_1_58_0 ;
using boost : 1.57.0 : <root>$(BOOST_ROOT_BASE)/boost_1_57_0 ;
using boost : 1.56.0 : <root>$(BOOST_ROOT_BASE)/boost_1_56_0 ;
using boost : 1.55.0 : <root>$(BOOST_ROOT_BASE)/boost_1_55_0 ;
using boost : 1.54.0 : <root>$(BOOST_ROOT_BASE)/boost_1_54_0 ;
using boost : 1.53.0 : <root>$(BOOST_ROOT_BASE)/boost_1_53_0 ;
using boost : 1.52.0 : <root>$(BOOST_ROOT_BASE)/boost_1_52_0 ;
using boost : 1.51.0 : <root>$(BOOST_ROOT_BASE)/boost_1_51_0 ;
using boost : 1.50.0 : <root>$(BOOST_ROOT_BASE)/boost_1_50_0 ;
using boost : 1.49.0 : <root>$(BOOST_ROOT_BASE)/boost_1_49_0 ;
using boost : 1.48.0 : <root>$(BOOST_ROOT_BASE)/boost_1_48_0 ;
using boost : 1.47.0 : <root>$(BOOST_ROOT_BASE)/boost_1_47_0 ;
using boost : 1.43.0 : <root>$(BOOST_ROOT_BASE)/boost_1_43_0 ;
using boost : 1.42.0 : <root>$(BOOST_ROOT_BASE)/boost_1_42_0 ;
using boost : 1.39.0 : <root>$(BOOST_ROOT_BASE)/boost_1_39_0 ;
using boost : 1.38.0 : <root>$(BOOST_ROOT_BASE)/boost_1_38_0 ;
using boost : 1.37.0 : <root>$(BOOST_ROOT_BASE)/boost_1_37_0 ;
using boost : 1.36.0 : <root>$(BOOST_ROOT_BASE)/boost_1_36_0 ;
using boost : 1.35.0 : <root>$(BOOST_ROOT_BASE)/boost_1_35_0 ;
using boost : 1.34.0 : <root>$(BOOST_ROOT_BASE)/boost_1_34_0 ;
using boost : 1.33.0 : <root>$(BOOST_ROOT_BASE)/boost_1_33_0 ;
