import os ;

constant HOME : [ os.environ HOME ] ;
if [ os.name ] = MACOSX
{
  constant LOCAL_PREFIX : [ SHELL "brew --prefix" : strip-eol ] ;
}
else
{
  constant LOCAL_PREFIX : /usr/local ;
}

# Host Compilers

if [ os.name ] = NT
{
  # this is the default system compiler
  using msvc ;
}
else if [ os.name ] = LINUX
{
  # this is the default system compiler
  using gcc ;

  # using gcc : 11 : /usr/bin/g++-11 ;
  using gcc : 10 : /usr/bin/g++-10 ;
  # using gcc : 9 : /usr/bin/g++-9 ;
  using gcc : 8 : /usr/bin/g++-8 ;
  using gcc : 7 : /usr/bin/g++-7 ;

  # other compilers, both system and optional
  using clang ;

  # using clang : 13 : /usr/bin/clang++-13 ;
  using clang : 12 : /usr/bin/clang++-12 ;
  using clang : 11 : /usr/bin/clang++-11 ;
  using clang : 10 : /usr/bin/clang++-10 ;
  using clang : 9 : /usr/bin/clang++-9 ;
  using clang : 8 : /usr/bin/clang++-8 ;
  using clang : 7 : /usr/bin/clang++-7 ;

  using gcc : 9arm : /usr/bin/arm-none-eabi-g++ ;

  using gcc : 5avr : /usr/bin/avr-g++ ;
}
else if [ os.name ] = MACOSX
{
  local macos-options =
    <compileflags>"-isystem $(LOCAL_PREFIX)/include"
    <linkflags>-L$(LOCAL_PREFIX)/lib
    ;

  # this is the default system compiler
  using clang : : : $(macos-options) ;

  # other compilers, both system and optional
  using clang : 19 : $(LOCAL_PREFIX)/opt/llvm@18/bin/clang++ : $(macos-options) ;
  using clang : 18 : $(LOCAL_PREFIX)/opt/llvm@18/bin/clang++ : $(macos-options) ;
  using clang : 17 : $(LOCAL_PREFIX)/opt/llvm@17/bin/clang++ : $(macos-options) ;
  # using clang : 16 : $(LOCAL_PREFIX)/opt/llvm@16/bin/clang++ : $(macos-options) ;
  using clang : 15 : $(LOCAL_PREFIX)/opt/llvm@15/bin/clang++ : $(macos-options) ;
  using clang : 14 : $(LOCAL_PREFIX)/opt/llvm@14/bin/clang++ : $(macos-options) ;
  # using clang : 13 : $(LOCAL_PREFIX)/opt/llvm@13/bin/clang++ : $(macos-options) ;
  # using clang : 12 : $(LOCAL_PREFIX)/opt/llvm@12/bin/clang++ : $(macos-options) ;
  # using clang : 11 : $(LOCAL_PREFIX)/opt/llvm@11/bin/clang++ : $(macos-options) ;
  # using clang : 10 : $(LOCAL_PREFIX)/opt/llvm@10/bin/clang++ : $(macos-options) ;
  # using clang : 9 : $(LOCAL_PREFIX)/opt/llvm@9/bin/clang++ : $(macos-options) ;
  # using clang : 8 : $(LOCAL_PREFIX)/opt/llvm@8/bin/clang++ : $(macos-options) ;

  using darwin ;

  # using darwin : 15 : $(LOCAL_PREFIX)/opt/gcc@15/bin/g++-15 : $(macos-options) ;
  using darwin : 14 : $(LOCAL_PREFIX)/opt/gcc@14/bin/g++-14 : $(macos-options) ;
  using darwin : 13 : $(LOCAL_PREFIX)/opt/gcc@13/bin/g++-13 : $(macos-options) ;
  using darwin : 12 : $(LOCAL_PREFIX)/opt/gcc@12/bin/g++-12 : $(macos-options) ;
  using darwin : 11 : $(LOCAL_PREFIX)/opt/gcc@11/bin/g++-11 : $(macos-options) ;
  # using darwin : 10 : $(LOCAL_PREFIX)/opt/gcc@10/bin/g++-10 : $(macos-options) ;
  # using darwin : 9 : $(LOCAL_PREFIX)/opt/gcc@9/bin/g++-9 : $(macos-options) ;
  # using darwin : 8 : $(LOCAL_PREFIX)/opt/gcc@8/bin/g++-8 : $(macos-options) ;
  # using darwin : 7 : $(LOCAL_PREFIX)/opt/gcc@7/bin/g++-7 : $(macos-options) ;
  # using darwin : 6 : $(LOCAL_PREFIX)/opt/gcc@6/bin/g++-6 : $(macos-options) ;

  using gcc ;

  # using gcc : 15 : $(LOCAL_PREFIX)/opt/gcc@15/bin/g++-15 : $(macos-options) ;
  using gcc : 14 : $(LOCAL_PREFIX)/opt/gcc@14/bin/g++-14 : $(macos-options) ;
  using gcc : 13 : $(LOCAL_PREFIX)/opt/gcc@13/bin/g++-13 : $(macos-options) ;
  using gcc : 12 : $(LOCAL_PREFIX)/opt/gcc@12/bin/g++-12 : $(macos-options) ;
  using gcc : 11 : $(LOCAL_PREFIX)/opt/gcc@11/bin/g++-11 : $(macos-options) ;
  # using gcc : 10 : $(LOCAL_PREFIX)/opt/gcc@11/bin/g++-10 : $(macos-options) ;
  # using gcc : 9 : $(LOCAL_PREFIX)/opt/gcc@9/bin/g++-9 : $(macos-options) ;
  # using gcc : 8 : $(LOCAL_PREFIX)/opt/gcc@8/bin/g++-8 : $(macos-options) ;
  # using gcc : 7 : $(LOCAL_PREFIX)/opt/gcc@7/bin/g++-7 : $(macos-options) ;
  # using gcc : 6 : $(LOCAL_PREFIX)/opt/gcc@6/bin/g++-6 : $(macos-options) ;

  using gcc : 13arm : $(LOCAL_PREFIX)/opt/arm-none-eabi-gcc/bin/arm-none-eabi-g++ ;
  using gcc : 12arm : $(LOCAL_PREFIX)/opt/arm-gcc-bin@12/bin/arm-none-eabi-g++ ;
  using gcc : 11arm : $(LOCAL_PREFIX)/opt/arm-gcc-bin@11/bin/arm-none-eabi-g++ ;
  # using gcc : 10arm : $(LOCAL_PREFIX)/opt/arm-gcc-bin@10/bin/arm-none-eabi-g++ ;
  using gcc : 9arm : $(LOCAL_PREFIX)/opt/arm-gcc-bin@9/bin/arm-none-eabi-g++ ;
  using gcc : 8arm : $(LOCAL_PREFIX)/opt/arm-gcc-bin@8/bin/arm-none-eabi-g++ ;

  using gcc : 12avr : $(LOCAL_PREFIX)/opt/avr-gcc@12/bin/avr-g++ ;
  using gcc : 11avr : $(LOCAL_PREFIX)/opt/avr-gcc@11/bin/avr-g++ ;
  using gcc : 10avr : $(LOCAL_PREFIX)/opt/avr-gcc@10/bin/avr-g++ ;
  using gcc : 9avr : $(LOCAL_PREFIX)/opt/avr-gcc@9/bin/avr-g++ ;
  using gcc : 8avr : $(LOCAL_PREFIX)/opt/avr-gcc@8/bin/avr-g++ ;
  # using gcc : 5avr : $(LOCAL_PREFIX)/opt/avr-gcc@5/bin/avr-g++ ;

  # using emscripten ;
}

# MPI

if [ os.name ] = MAXOSX
{
  using mpi ;
}

# Documentation

local docbook-xsl-path = ;
if [ os.name ] = MACOSX
{
  docbook-xsl-path = $(LOCAL_PREFIX)/opt/docbook-xsl/docbook-xsl ;
}
local docbook-dtd-path = ;
if [ os.name ] = MACOSX
{
  docbook-dtd-path = $(LOCAL_PREFIX)/opt/docbook/docbook/xml/4.2 ;
}
local boostbook-executable = ;
if [ os.name ] = MACOSX
{
  boostbook-executable = $(HOME)/opt/local/src/boost/boost.git/tools/boostbook ;
}
local quickbook-executable = ;
if [ os.name ] = MACOSX
{
  quickbook-executable = $(HOME)/opt/local/src/boost/boost.git/bin.v2/tools/quickbook/src/clang-darwin-4.2.1/release/link-static/quickbook ;
}

using xsltproc ;
using boostbook : $(docbook-xsl-path) : $(docbook-dtd-path) : $(boostbook-executable) ;
using doxygen ;
using quickbook : $(quickbook-executable) ;
using asciidoctor ;

if [ os.name ] = MACOSX
{
  using fop ;
}


# Boost.Build user configuration for the Boost C++ Libraries

import boost ;

path-constant BOOST_ROOT_BASE : "$(HOME)/opt/local/src/boost" ;

# Default to the installed version of the Boost C++ Libraries
if [ os.name ] = LINUX
{
  # system boost
  using boost : "" : <include>/usr/include <library>/usr/lib <layout>system ;
}
else if [ os.name ] = MACOSX
{
  # Homebrew-installed Boost
  using boost : "" : <include>$(LOCAL_PREFIX)/include <library>$(LOCAL_PREFIX)/lib <layout>system ;
}
else if [ os.name ] = NT
{
  # user-built Boost
  using boost : "" : <include>C:/Boost/include <library>C:/Boost/lib <layout>system ;
}

# Provide for building from git, requires special knowledge
using boost : git : <root>$(BOOST_ROOT_BASE)/boost.git ;

# Provide all source versions.
using boost : 1.87.0 : <root>$(BOOST_ROOT_BASE)/boost_1_87_0 ;
using boost : 1.86.0 : <root>$(BOOST_ROOT_BASE)/boost_1_86_0 ;
using boost : 1.85.0 : <root>$(BOOST_ROOT_BASE)/boost_1_85_0 ;
using boost : 1.84.0 : <root>$(BOOST_ROOT_BASE)/boost_1_84_0 ;
using boost : 1.83.0 : <root>$(BOOST_ROOT_BASE)/boost_1_83_0 ;
using boost : 1.82.0 : <root>$(BOOST_ROOT_BASE)/boost_1_82_0 ;
using boost : 1.81.0 : <root>$(BOOST_ROOT_BASE)/boost_1_81_0 ;
using boost : 1.80.0 : <root>$(BOOST_ROOT_BASE)/boost_1_80_0 ;
using boost : 1.79.0 : <root>$(BOOST_ROOT_BASE)/boost_1_79_0 ;
using boost : 1.78.0 : <root>$(BOOST_ROOT_BASE)/boost_1_78_0 ;
using boost : 1.77.0 : <root>$(BOOST_ROOT_BASE)/boost_1_77_0 ;
using boost : 1.76.0 : <root>$(BOOST_ROOT_BASE)/boost_1_76_0 ;
using boost : 1.75.0 : <root>$(BOOST_ROOT_BASE)/boost_1_75_0 ;
using boost : 1.74.0 : <root>$(BOOST_ROOT_BASE)/boost_1_74_0 ;
using boost : 1.73.0 : <root>$(BOOST_ROOT_BASE)/boost_1_73_0 ;
using boost : 1.72.0 : <root>$(BOOST_ROOT_BASE)/boost_1_72_0 ;
using boost : 1.71.0 : <root>$(BOOST_ROOT_BASE)/boost_1_71_0 ;
using boost : 1.70.0 : <root>$(BOOST_ROOT_BASE)/boost_1_70_0 ;
using boost : 1.69.0 : <root>$(BOOST_ROOT_BASE)/boost_1_69_0 ;
using boost : 1.68.0 : <root>$(BOOST_ROOT_BASE)/boost_1_68_0 ;
using boost : 1.67.0 : <root>$(BOOST_ROOT_BASE)/boost_1_67_0 ;
using boost : 1.66.0 : <root>$(BOOST_ROOT_BASE)/boost_1_66_0 ;
using boost : 1.65.0 : <root>$(BOOST_ROOT_BASE)/boost_1_65_0 ;
using boost : 1.64.0 : <root>$(BOOST_ROOT_BASE)/boost_1_64_0 ;
using boost : 1.63.0 : <root>$(BOOST_ROOT_BASE)/boost_1_63_0 ;
using boost : 1.62.0 : <root>$(BOOST_ROOT_BASE)/boost_1_62_0 ;
using boost : 1.61.0 : <root>$(BOOST_ROOT_BASE)/boost_1_61_0 ;
using boost : 1.60.0 : <root>$(BOOST_ROOT_BASE)/boost_1_60_0 ;
using boost : 1.59.0 : <root>$(BOOST_ROOT_BASE)/boost_1_59_0 ;
using boost : 1.58.0 : <root>$(BOOST_ROOT_BASE)/boost_1_58_0 ;
using boost : 1.57.0 : <root>$(BOOST_ROOT_BASE)/boost_1_57_0 ;
using boost : 1.56.0 : <root>$(BOOST_ROOT_BASE)/boost_1_56_0 ;
using boost : 1.55.0 : <root>$(BOOST_ROOT_BASE)/boost_1_55_0 ;
using boost : 1.54.0 : <root>$(BOOST_ROOT_BASE)/boost_1_54_0 ;
using boost : 1.53.0 : <root>$(BOOST_ROOT_BASE)/boost_1_53_0 ;
using boost : 1.52.0 : <root>$(BOOST_ROOT_BASE)/boost_1_52_0 ;
using boost : 1.51.0 : <root>$(BOOST_ROOT_BASE)/boost_1_51_0 ;
using boost : 1.50.0 : <root>$(BOOST_ROOT_BASE)/boost_1_50_0 ;
using boost : 1.49.0 : <root>$(BOOST_ROOT_BASE)/boost_1_49_0 ;
using boost : 1.48.0 : <root>$(BOOST_ROOT_BASE)/boost_1_48_0 ;
using boost : 1.47.0 : <root>$(BOOST_ROOT_BASE)/boost_1_47_0 ;
using boost : 1.43.0 : <root>$(BOOST_ROOT_BASE)/boost_1_43_0 ;
using boost : 1.42.0 : <root>$(BOOST_ROOT_BASE)/boost_1_42_0 ;
using boost : 1.39.0 : <root>$(BOOST_ROOT_BASE)/boost_1_39_0 ;
using boost : 1.38.0 : <root>$(BOOST_ROOT_BASE)/boost_1_38_0 ;
using boost : 1.37.0 : <root>$(BOOST_ROOT_BASE)/boost_1_37_0 ;
using boost : 1.36.0 : <root>$(BOOST_ROOT_BASE)/boost_1_36_0 ;
using boost : 1.35.0 : <root>$(BOOST_ROOT_BASE)/boost_1_35_0 ;
using boost : 1.34.0 : <root>$(BOOST_ROOT_BASE)/boost_1_34_0 ;
using boost : 1.33.0 : <root>$(BOOST_ROOT_BASE)/boost_1_33_0 ;
